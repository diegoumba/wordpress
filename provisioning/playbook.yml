---
  - hosts: all
    become: true
    tasks:
# Installing PHP
      - name: Install de ca-certificate package for install
        apt: name=ca-certificates state=installed
      - name: Install the php repository for php7
        apt_repository: repo="ppa:ondrej/php"
      - name: Update the apt cache
        apt: update_cache=yes cache_valid_time=3600
      - name: Install php from ondrej repository
        apt: name=php state=installed
      - name: Install other php packages
        apt: name={{item}} state=installed
        with_items:
          - php
          - php-fpm
          - php-mysql
          - php-xml
      - name: Remove apache2 cause nginx
        apt: name=apache2 state=removed

# Installing Mysql
      - name: Install MySQL
        apt: name={{item}} state=installed
        with_items:
          - mysql-server-5.6
          - python-mysqldb

# Hardening Mysql
  # Conditionals about password config in DB
      - name: Generate new root password
        command: openssl rand -hex 7 creates=/root/.my.cnf
        register: mysql_new_root_pass
      - name: Remove anonymous users
        mysql_user: name="" state=absent
        when: mysql_new_root_pass.changed
      - name: Remove test database
        mysql_db: name=test state=absent
        when: mysql_new_root_pass.changed
      - name: Output new root password
        debug: msg="New root password is {{mysql_new_root_pass}}"
        when: mysql_new_root_pass.changed
      - name: Update root password
        mysql_user: name=root host={{item}} password={{mysql_new_root_pass.stdout}}
        with_items:
          - "{{ansible_hostname}}"
          - 127.0.0.1
          - ::1
          - localhost
        when: mysql_new_root_pass.changed
      - name: Create my.cnf
        template: src=templates/mysql/my.cnf dest=/root/.my.cnf
        when: mysql_new_root_pass.changed

# Installation nginx
      - name: Install nginx
        apt: name=nginx state=installed

      - name: Start nginx
        service: name=nginx state=running

      - name: Create nginx config
        template: src=templates/nginx/default dest=/etc/nginx/sites-available/default
        notify: restart nginx

    handlers:
      - name: restart nginx
        service: name=nginx state=restarted
